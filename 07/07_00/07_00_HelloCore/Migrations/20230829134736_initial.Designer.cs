// <auto-generated />
using System;
using HelloCore.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HelloCore.Migrations
{
    [DbContext(typeof(HelloCoreContext))]
    [Migration("20230829134736_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("HelloCore.Models.Bestelling", b =>
                {
                    b.Property<int>("BestellingID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BestellingID"), 1L, 1);

                    b.Property<int>("KlantID")
                        .HasColumnType("int");

                    b.HasKey("BestellingID");

                    b.HasIndex("KlantID");

                    b.ToTable("Bestelling", (string)null);
                });

            modelBuilder.Entity("HelloCore.Models.Categorie", b =>
                {
                    b.Property<int>("CategorieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategorieId"), 1L, 1);

                    b.Property<string>("Beschrijving")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategorieId");

                    b.ToTable("Categorie", (string)null);
                });

            modelBuilder.Entity("HelloCore.Models.Klant", b =>
                {
                    b.Property<int>("KlantID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KlantID"), 1L, 1);

                    b.Property<DateTime>("AangemaaktDatum")
                        .HasColumnType("datetime2");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Voornaam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KlantID");

                    b.ToTable("Klant", (string)null);
                });

            modelBuilder.Entity("HelloCore.Models.OrderLijn", b =>
                {
                    b.Property<int>("OrderLijnID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderLijnID"), 1L, 1);

                    b.Property<double>("Aantal")
                        .HasColumnType("float");

                    b.Property<int>("BestellingID")
                        .HasColumnType("int");

                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.HasKey("OrderLijnID");

                    b.HasIndex("BestellingID");

                    b.HasIndex("ProductID");

                    b.ToTable("OrderLijn", (string)null);
                });

            modelBuilder.Entity("HelloCore.Models.Product", b =>
                {
                    b.Property<int>("ProductID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductID"), 1L, 1);

                    b.Property<string>("Beschrijving")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Merk")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Prijs")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ProductID");

                    b.ToTable("Product", (string)null);
                });

            modelBuilder.Entity("HelloCore.Models.Bestelling", b =>
                {
                    b.HasOne("HelloCore.Models.Klant", "klant")
                        .WithMany("bestelling")
                        .HasForeignKey("KlantID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("klant");
                });

            modelBuilder.Entity("HelloCore.Models.OrderLijn", b =>
                {
                    b.HasOne("HelloCore.Models.Bestelling", "bestelling")
                        .WithMany("orderlijnen")
                        .HasForeignKey("BestellingID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HelloCore.Models.Product", "product")
                        .WithMany("orderlijnen")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("bestelling");

                    b.Navigation("product");
                });

            modelBuilder.Entity("HelloCore.Models.Bestelling", b =>
                {
                    b.Navigation("orderlijnen");
                });

            modelBuilder.Entity("HelloCore.Models.Klant", b =>
                {
                    b.Navigation("bestelling");
                });

            modelBuilder.Entity("HelloCore.Models.Product", b =>
                {
                    b.Navigation("orderlijnen");
                });
#pragma warning restore 612, 618
        }
    }
}
