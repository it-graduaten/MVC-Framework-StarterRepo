@model InterimKantoor.ViewModels.JobEditViewModel
@{
    ViewData["Title"] = "Edit";
}

<h1>Edit bestaande Job</h1>

<hr />
<form asp-action="Edit">
    <!-- Hier moet je zelf nog je formulier opbouwen    -->

</form>

<!-- Hieronder mag je niets aanpassen    -->
@section Scripts{
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            var addKlantJobButton = document.querySelector(".add-klantJob");
            if (addKlantJobButton) {
                addKlantJobButton.addEventListener("click", function () {
                    addKlantJob();
                });
            }

            document.addEventListener("click", function (event) {
                if (event.target.classList.contains("remove-klantJob")) {
                    var klantJobRow = event.target.closest(".klantJobRow");
                    if (klantJobRow) {
                        klantJobRow.remove();
                    }
                }
            });

            var aantalPlaatsenInput = document.getElementById("AantalPlaatsen");
            if (aantalPlaatsenInput) {
                aantalPlaatsenInput.addEventListener("change", function () {
                    checkAantalPlaatsen();
                });
            }

            // Initial check
            checkAantalPlaatsen();
        });

        function addKlantJob() {
            var klantJobRows = document.querySelectorAll(".klantJobRow");
            var newIndex = klantJobRows.length;
            var maxAantalPlaatsen = parseInt(document.getElementById("AantalPlaatsen").value);

            if (newIndex < maxAantalPlaatsen && maxAantalPlaatsen <= @Model.Klanten.Count) {
                var klantSelect = '<select name="KlantJobs[' + newIndex + '].KlantID" class="form-control klant-select">';

        @foreach (var klant in Model.Klanten)
        {
            <text>
                        klantSelect += '<option value="@klant.Value">@klant.Text</option>';
            </text>
        }

                    klantSelect += '</select>';

                var newKlantJobRow = document.createElement("tr");
                newKlantJobRow.classList.add("klantJobRow");
                newKlantJobRow.innerHTML =
                    '<input type="hidden" name="KlantJobs.Index" value="' + newIndex + '" />' +
                    '<td class="form-group">' + klantSelect + '</td>' +
                    '<td><a href="#" class="btn btn-danger remove-klantJob">Verwijder</a></td>';

                document.getElementById("klantJobsContainer").appendChild(newKlantJobRow);
            } else {
                alert("Het maximum aantal plaatsen is al bereikt.");
            }
        }

        function checkAantalPlaatsen() {
            var currentAantalPlaatsen = document.querySelectorAll(".klantJobRow").length;
            var maxAantalPlaatsen = parseInt(document.getElementById("AantalPlaatsen").value);
            var originalAantalPlaatsen = parseInt(document.getElementById("AantalPlaatsen").getAttribute("data-original-value"));

            if (currentAantalPlaatsen > maxAantalPlaatsen) {
                alert("Het aantal toegewezen klanten overschrijdt het nieuwe maximum aantal plaatsen.");
                document.getElementById("AantalPlaatsen").value = originalAantalPlaatsen;
            }

            if (maxAantalPlaatsen > @Model.Klanten.Count) {
                alert("Het aantal beschikbare klanten overschrijdt het nieuwe maximum aantal plaatsen.");
                document.getElementById("AantalPlaatsen").value = originalAantalPlaatsen;
            }
        }
    </script>

}